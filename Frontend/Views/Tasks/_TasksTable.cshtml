@using TaskScheduler
@using TaskScheduler.Entities
@model IEnumerable<TaskScheduler.Entities.TaskInfo>

    <table class="table table-striped">
        <thead>
            <tr>
                <td>Task</td>
                <td>Status</td>
                <td>Frequency</td>
                <td>Response Status</td>
                <td>Last Ran</td>
                <td>Next Running</td>
                <td style="width: 50px"></td>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td><b>@item.Name</b></td>
                    <td>@((item.Status == TaskStatus.Enabled) ? "Enabled" : "Disabled")</td>
                    <td>@item.Frequency</td>
                    <td><strong>@item.ResponseStatus.ToString()</strong></td>
                    <td>@item.LastRunningOn.ToString("dd MMM yyyy HH':'mm':'ss 'UTC'")</td>
                    <td>@item.NextRunningOn.ToString("dd MMM yyyy HH':'mm':'ss 'UTC'")</td>
                    <td>
                        @{
                            using (Html.BeginForm("trigger", "tasks"))
                            {
                                @Html.Hidden("taskName", item.Name)
                                <input type="submit" value="Run" />
                            }
                        }
                    </td>
                </tr>
                <tr>
                    <td colspan="7">
                        Action type: @item.TaskCommandType (@item.TaskCommandParameters)
                    </td>
                </tr>
            }
        </tbody>
    </table>
